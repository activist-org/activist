# Generated by Django 4.2.10 on 2024-03-06 01:55

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('content', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('deletion_date', models.DateTimeField(blank=True, null=True, verbose_name='Deletion date')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('tagline', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(max_length=500)),
                ('social_accounts', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None)),
                ('category', models.CharField(max_length=255)),
                ('total_flags', models.IntegerField(default=0)),
                ('about_images', models.ManyToManyField(blank=True, related_name='about_img', to='content.image')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group_icon', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.image')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('deletion_date', models.DateTimeField(blank=True, null=True, verbose_name='Deletion date')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('tagline', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(max_length=500)),
                ('social_accounts', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None)),
                ('high_risk', models.BooleanField(default=False)),
                ('total_flags', models.IntegerField(default=0)),
                ('about_images', models.ManyToManyField(blank=True, related_name='about_images', to='content.image')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_orgs', to=settings.AUTH_USER_MODEL)),
                ('org_icon', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.image')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizationApplicationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.organization')),
                ('topic_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.topic')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.group')),
                ('org_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.organization')),
                ('task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.task')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.organization')),
                ('resource_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.resource')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_owner', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_comms', models.BooleanField(default=False)),
                ('org_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.organization')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('org_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.organization')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orgs_in_favor', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, default=list, size=None)),
                ('orgs_against', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, default=list, size=None)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('status_updated', models.DateTimeField(auto_now=True)),
                ('org_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.organization')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='entities.organizationapplicationstatus')),
            ],
        ),
        migrations.CreateModel(
            name='GroupTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.group')),
                ('topic_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.topic')),
            ],
        ),
        migrations.CreateModel(
            name='GroupResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.group')),
                ('resource_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.resource')),
            ],
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_owner', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_comms', models.BooleanField(default=False)),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.group')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GroupEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.group')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='org_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.organization'),
        ),
    ]
