# SPDX-License-Identifier: AGPL-3.0-or-later
import pyclamd
from django.conf import settings


def scan_file(file_path):
    try:
        # Connect to the ClamAV service
        cd = pyclamd.ClamdNetworkSocket(host=settings.CLAMD_HOST, port=settings.CLAMD_PORT, timeout=30.0)

        # Test the connection
        cd.ping()


        # Scan the file
        scan_result = cd.scan_file(file_path)

        if scan_result:
            if 'OK' in scan_result.get(file_path, ''):
                return None  # No malware detected
            else:
                return scan_result  # Malware detected, return the scan details
        else:
            return {'error': 'Scan failed or no result returned by ClamAV.'}

    except pyclamd.ConnectionError as e:
        return {'error': f'Could not connect to ClamAV: {e}'}
    except pyclamd.ClamdError as e:
        return {'error': f'ClamAV error: {e}'}
    except Exception as e:
        return {'error': f'An unexpected error occurred during scanning: {e}'}

def scan_file_in_memory(file_content):
    try:
        # Connect to the ClamAV service
        cd = pyclamd.ClamdNetworkSocket(host=settings.CLAMD_HOST, port=settings.CLAMD_PORT, timeout=30.0)

        # Test the connection
        cd.ping()

        # Scan the file content in memory
        scan_result = cd.instream(file_content)

        if scan_result and 'OK' not in scan_result.get('stream', ''):
            return scan_result
        else:
            return None

    except pyclamd.ConnectionError as e:
        return {'error': f'Could not connect to ClamAV: {e}'}
    except pyclamd.ClamdError as e:
        return {'error': f'ClamAV error: {e}'}
    except Exception as e:
        return {'error': f'An unexpected error occurred during scanning: {e}'}
