version: "3.7"

services:
  backend:
    env_file:
      - .env.dev
    build:
      context: ./backend
    container_name: django_backend
    command: sh -c "python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:${BACKEND_PORT}"
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${BACKEND_PORT}/health/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    env_file:
      - .env.dev
    build:
      context: ./frontend
    container_name: nuxt_frontend
    command: sh -c "yarn install && yarn dev --port ${FRONTEND_PORT}"
    volumes:
      - ./frontend:/app
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
      - "24678:24678"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${FRONTEND_PORT}/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    env_file:
      - .env.dev
    image: postgres:15
    container_name: postgres_db
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
