services:
  db:
    env_file:
      - .env.dev
    image: postgres:15
    container_name: postgres_db
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    env_file:
      - .env.dev
    build:
      context: ./backend
    container_name: django_backend
    restart: unless-stopped
    command: sh -c "
      if [ \"$ENVIRONMENT\" = \"development\" ]; then
      python /app/core/management/commands/clear_dev_images.py;
      fi;
      python manage.py wait_for_db &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py loaddata fixtures/superuser.json &&
      python manage.py loaddata fixtures/status_types.json &&
      python manage.py loaddata fixtures/topics.json &&
      python manage.py populate_db \
      --users 10 \
      --orgs-per-user 1 \
      --groups-per-org 2 \
      --events-per-org 1 \
      --events-per-group 1 \
      --faq-entries-per-entity 3 \
      --resources-per-entity 2 \
      --json-data-to-assign core/management/commands/entity_data_to_assign.json &&
      python manage.py runserver 0.0.0.0:${BACKEND_PORT}"
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - VITE_FRONTEND_URL=${VITE_FRONTEND_URL}
      - VITE_BACKEND_URL=${VITE_BACKEND_URL}
    depends_on:
      - db
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:${BACKEND_PORT}/health/ || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./backend/media:/app/media

  frontend:
    env_file:
      - .env.dev
    build:
      context: ./frontend
    container_name: nuxt_frontend
    # Use USE_PREVIEW=true to run pre-built version (faster for E2E tests).
    # Use USE_PREVIEW=false or unset for dev mode (default).
    command: sh -c "
      corepack enable && yarn install &&
      if [ \"$${USE_PREVIEW}\" = \"true\" ]; then
      echo 'üèóÔ∏è  Building frontend for preview mode...' &&
      yarn build &&
      echo '‚ñ∂Ô∏è  Starting preview server on port ${FRONTEND_PORT}...' &&
      yarn preview --port ${FRONTEND_PORT};
      else
      echo '‚ñ∂Ô∏è  Starting dev server...' &&
      yarn dev --port ${FRONTEND_PORT};
      fi"
    volumes:
      - ./frontend:/app
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
      - "24678:24678"
    environment:
      - USE_PREVIEW=${USE_PREVIEW:-false}
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:${FRONTEND_PORT}/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
